//=============================================================================
// Luna_CallEvent.js
//=============================================================================
//=============================================================================
// Build Date: 2020-09-23 19:39:14
//=============================================================================
//=============================================================================
// Made with LunaTea -- Haxe
//=============================================================================

// Generated by Haxe 4.1.3
/*:
@author LunaTechs - Kino
@plugindesc An RPGMakerMV/MZ plugin that allows you to call an event from any map in your game<LunaCallEvent>.

@target MV MZ

@command callEvent
@text Call Event
@desc Allows you to call an event from any map with any event ID


@help
==== How To Use ====


An RPGMakerMV/MZ plugin that allows you to call an event from any map in your game.

MIT License
Copyright (c) 2020 LunaTechsDev
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE
*/





(function ($hx_exports, $global) { "use strict"
class EReg {
	constructor(r,opt) {
		this.r = new RegExp(r,opt.split("u").join(""))
	}
	match(s) {
		if(this.r.global) {
			this.r.lastIndex = 0
		}
		this.r.m = this.r.exec(s)
		this.r.s = s
		return this.r.m != null;
	}
}
class GameInter extends Game_Interpreter {
	constructor(depth) {
		super(depth);
	}
}
class LunaCallEvent {
	static main() {
		let _g = []
		let _g1 = 0
		let _g2 = $plugins
		while(_g1 < _g2.length) {
			let v = _g2[_g1]
			++_g1
			if(new EReg("<LunaCallEvent>","ig").match(v.description)) {
				_g.push(v)
			}
		}
		let plugin = _g[0]
		let params = plugin.parameters
		LunaCallEvent.Params = { }
		console.log("src/Main.hx:35:",LunaCallEvent.Params)
		
//=============================================================================
// Scene_Map
//=============================================================================
      
		
//=============================================================================
// Game_Interpreter
//=============================================================================
      
		let _Game_Interpreter_callEvent = Game_Interpreter.prototype.callEvent
		Game_Interpreter.prototype.callEvent = function(list,mapId,eventId) {
			this.clear()
			this._mapId = mapId
			this._eventId = eventId
			this._list = list
			this.loadImages()
		}
	}
	static params() {
		return LunaCallEvent.Params;
	}
}
$hx_exports["LunaCallEvent"] = LunaCallEvent
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0
		this.array = array
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
class _$LTGlobals_$ {
}
class utils_Fn {
	static proto(obj) {
		return obj.prototype;
	}
	static updateProto(obj,fn) {
		return (fn)(obj.prototype);
	}
	static updateEntity(obj,fn) {
		return (fn)(obj);
	}
}
LunaCallEvent.listener = new PIXI.utils.EventEmitter()
LunaCallEvent.main()
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, {})

//# sourceMappingURL=Luna_CallEvent.js.map